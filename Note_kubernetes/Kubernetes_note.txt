Installation
*************


site:  https://techexpert.tips/kubernetes/kubernetes-dashboard-user-authentication-nginx/#:~:text=Configure%20the%20Cluster%20admin%20role%20to%20the%20Dashboard%20service%20account.&text=Create%20a%20service%20account%20for%20the%20Nginx%20proxy.&text=Configure%20the%20Cluster%20admin%20role%20to%20the%20Nginx%20proxy%20account.&text=List%20the%20Nginx%20secret%20available%20on%20the%20Kubernetes%20server

apt-get update
apt-get install apt-transport-https wget gnupg ntpdate curl mlocate

apt-get install docker.io

systemctl enable docker.service

updatedb
locate docker.service



vi /etc/systemd/system/multi-user.target.wants/docker.service --> open the file and past the below lines.
--exec-opt native.cgroupdriver=systemd
ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --exec-opt native.cgroupdriver=systemd

vi /etc/sysctl.d/k8s.conf --> open the file and past the below lines.
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1

sysctl --system

vi /etc/modules-load.d/modules.conf  --> open the file and past the below lines.
overlay
br_netfilter

vi /etc/fstab --> cmd the below lines
/dev/disk/by-uuid/a24f00e7-918a-4a05-b4c9-35bdef750fb4 / ext4 defaults 0 0
# /swap.img       none    swap    sw      0       0

hostnamectl set-hostname kubernetes-01.local

vi /etc/profile.d/kubernetes.sh --> open the file and past the below lines.
#!/bin/bash
export KUBECONFIG=/etc/kubernetes/admin.conf

reboot

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add

apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"

apt-get update
apt-get install kubeadm kubectl kubelet 

kubeadm config images pull

kubeadm init 

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config
  
 chmod 644 /etc/kubernetes/admin.conf

kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/2140ac876ef134e0ed5af15c65e414cf26827915/Documentation/kube-flannel.yml
               
                                           (or)

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')&env.WEAVE_MTU=1337"


										   























apt install policycoreutils -y
apt install selinux-utils -y


kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')&env.WEAVE_MTU=1337"





kubeadm join 192.168.1.11:6443 --token ismvvb.wya0gfsafsqbrk8l \
    --discovery-token-ca-cert-hash sha256:d27847de93013dd3d95e827a1f101154614e0c3b4641e5619627d708ad09bdbe
	
	
kubectl get ns --> list the namespace

kubectl create deployment nginx --image=nginx -n=arun --replicas=2                        --> deployment of pods
kubectl create deployment (custom_name) --image=(image_name) -n=(name_space) --replicas=2

kubectl get all -n arun        -->list the name_space pods
kubectl get all -n (name_space) 

